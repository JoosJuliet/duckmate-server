{
  "_args": [
    [
      {
        "raw": "@google-cloud/speech@https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
        "scope": "@google-cloud",
        "escapedName": "@google-cloud%2fspeech",
        "name": "@google-cloud/speech",
        "rawSpec": "https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
        "spec": "https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
        "type": "remote"
      },
      "/home/test01/node_modules/google-cloud"
    ]
  ],
  "_from": "@google-cloud/speech@>=0.7.0 <0.8.0",
  "_id": "@google-cloud/speech@0.7.0",
  "_inCache": true,
  "_location": "/google-cloud/@google-cloud/speech",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@google-cloud/speech@https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
    "scope": "@google-cloud",
    "escapedName": "@google-cloud%2fspeech",
    "name": "@google-cloud/speech",
    "rawSpec": "https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
    "spec": "https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/google-cloud"
  ],
  "_resolved": "https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
  "_shasum": "82ecedede123920a49f99990ad7592a80676fcf7",
  "_shrinkwrap": null,
  "_spec": "@google-cloud/speech@https://registry.npmjs.org/@google-cloud/speech/-/speech-0.7.0.tgz",
  "_where": "/home/test01/node_modules/google-cloud",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/googlecloudplatform/google-cloud-node/issues"
  },
  "contributors": [
    {
      "name": "Burcu Dogan",
      "email": "jbd@google.com"
    },
    {
      "name": "Jason Dobry",
      "email": "jason.dobry@gmail.com"
    },
    {
      "name": "Johan Euphrosine",
      "email": "proppy@google.com"
    },
    {
      "name": "Patrick Costello",
      "email": "pcostell@google.com"
    },
    {
      "name": "Ryan Seys",
      "email": "ryan@ryanseys.com"
    },
    {
      "name": "Silvano Luciani",
      "email": "silvano@google.com"
    },
    {
      "name": "Stephen Sawchuk",
      "email": "sawchuk@gmail.com"
    }
  ],
  "dependencies": {
    "@google-cloud/common": "^0.12.0",
    "@google-cloud/common-grpc": "^0.1.1",
    "events-intercept": "^2.0.0",
    "extend": "^3.0.0",
    "google-gax": "^0.12.0",
    "google-proto-files": "^0.10.0",
    "is": "^3.1.0",
    "propprop": "^0.3.1",
    "pumpify": "^1.3.5",
    "request": "^2.74.0",
    "stream-events": "^1.0.1",
    "string-format-obj": "^1.1.0",
    "through2": "^2.0.1"
  },
  "description": "Cloud Speech Client Library for Node.js",
  "devDependencies": {
    "@google-cloud/storage": "*",
    "async": "^2.0.1",
    "methmeth": "^1.1.0",
    "mocha": "^3.0.2",
    "proxyquire": "^1.7.10",
    "tmp": "^0.0.31",
    "uuid": "^3.0.1"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "files": [
    "src",
    "AUTHORS",
    "CONTRIBUTORS",
    "COPYING"
  ],
  "homepage": "https://github.com/googlecloudplatform/google-cloud-node#readme",
  "keywords": [
    "google apis client",
    "google api client",
    "google apis",
    "google api",
    "google",
    "google cloud platform",
    "google cloud",
    "cloud",
    "google speech",
    "speech"
  ],
  "license": "Apache-2.0",
  "main": "./src/index.js",
  "name": "@google-cloud/speech",
  "optionalDependencies": {},
  "readme": "# @google-cloud/speech ([Alpha][versioning])\r\n> Cloud Speech Client Library for Node.js\r\n\r\n*Looking for more Google APIs than just Speech? You might want to check out [`google-cloud`][google-cloud].*\r\n\r\n- [API Documentation][gcloud-speech-docs]\r\n- [Official Documentation][cloud-speech-docs]\r\n\r\n\r\n```sh\r\n$ npm install --save @google-cloud/speech\r\n```\r\n```js\r\nvar speech = require('@google-cloud/speech')({\r\n  projectId: 'grape-spaceship-123',\r\n  keyFilename: '/path/to/keyfile.json'\r\n});\r\n\r\n// Detect the speech in an audio file.\r\nspeech.recognize('./audio.raw', {\r\n  encoding: 'LINEAR16',\r\n  sampleRate: 16000\r\n}, function(err, transcript) {\r\n  // transcript = 'how old is the Brooklyn Bridge'\r\n});\r\n\r\n// Detect the speech in an audio file stream.\r\nfs.createReadStream('./audio.raw')\r\n  .on('error', console.error)\r\n  .pipe(speech.createRecognizeStream({\r\n    config: {\r\n      encoding: 'LINEAR16',\r\n      sampleRate: 16000\r\n    },\r\n    singleUtterance: false,\r\n    interimResults: false\r\n  }))\r\n  .on('error', console.error)\r\n  .on('data', function(data) {\r\n    // The first \"data\" event emitted might look like:\r\n    //   data = {\r\n    //     endpointerType: Speech.endpointerTypes.START_OF_SPEECH,\r\n    //     ...\r\n    //   }\r\n    //\r\n    // A later \"data\" event emitted might look like:\r\n    //   data = {\r\n    //     endpointerType: Speech.endpointerTypes.END_OF_AUDIO,\r\n    //     ...\r\n    //   }\r\n    //\r\n    // A final \"data\" event emitted might look like:\r\n    //   data = {\r\n    //     endpointerType: Speech.endpointerTypes.END_OF_AUDIO,\r\n    //     results: \"how old is the Brooklyn Bridge\",\r\n    //     ...\r\n    //   }\r\n  });\r\n\r\n// Promises are also supported by omitting callbacks.\r\nspeech.recognize('./audio.raw', {\r\n  encoding: 'LINEAR16',\r\n  sampleRate: 16000\r\n}).then(function(data) {\r\n  var transcript = data[0];\r\n});\r\n\r\n// It's also possible to integrate with third-party Promise libraries.\r\nvar speech = require('@google-cloud/speech')({\r\n  promise: require('bluebird')\r\n});\r\n```\r\n\r\n\r\n## Authentication\r\n\r\nIt's incredibly easy to get authenticated and start using Google's APIs. You can set your credentials on a global basis as well as on a per-API basis. See each individual API section below to see how you can auth on a per-API-basis. This is useful if you want to use different accounts for different Cloud services.\r\n\r\n### On Google Cloud Platform\r\n\r\nIf you are running this client on Google Cloud Platform, we handle authentication for you with no configuration. You just need to make sure that when you [set up the GCE instance][gce-how-to], you add the correct scopes for the APIs you want to access.\r\n\r\n``` js\r\nvar speech = require('@google-cloud/speech')();\r\n// ...you're good to go!\r\n```\r\n\r\n### Elsewhere\r\n\r\nIf you are not running this client on Google Cloud Platform, you need a Google Developers service account. To create a service account:\r\n\r\n1. Visit the [Google Developers Console][dev-console].\r\n2. Create a new project or click on an existing project.\r\n3. Navigate to  **APIs & auth** > **APIs section** and turn on the following APIs (you may need to enable billing in order to use these services):\r\n  * Google Cloud Speech API\r\n4. Navigate to **APIs & auth** >  **Credentials** and then:\r\n  * If you want to use a new service account key, click on **Create credentials** and select **Service account key**. After the account key is created, you will be prompted to download the JSON key file that the library uses to authenticate your requests.\r\n  * If you want to generate a new service account key for an existing service account, click on **Generate new JSON key** and download the JSON key file.\r\n\r\n``` js\r\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\r\n\r\nvar speech = require('@google-cloud/speech')({\r\n  projectId: projectId,\r\n\r\n  // The path to your key file:\r\n  keyFilename: '/path/to/keyfile.json'\r\n\r\n  // Or the contents of the key file:\r\n  credentials: require('./path/to/keyfile.json')\r\n});\r\n\r\n// ...you're good to go!\r\n```\r\n\r\n\r\n[versioning]: https://github.com/GoogleCloudPlatform/google-cloud-node#versioning\r\n[google-cloud]: https://github.com/GoogleCloudPlatform/google-cloud-node/\r\n[gce-how-to]: https://cloud.google.com/compute/docs/authentication#using\r\n[dev-console]: https://console.developers.google.com/project\r\n[gcloud-speech-docs]: https://googlecloudplatform.github.io/google-cloud-node/#/docs/speech\r\n[cloud-speech-docs]: https://cloud.google.com/speech\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googlecloudplatform/google-cloud-node.git"
  },
  "scripts": {
    "publish-module": "node ../../scripts/publish.js speech",
    "system-test": "mocha system-test/*.js --no-timeouts --bail",
    "test": "mocha test/*.js"
  },
  "version": "0.7.0"
}
